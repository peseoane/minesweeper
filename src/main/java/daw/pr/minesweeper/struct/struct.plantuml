@startuml

title __STRUCT's Class Diagram__\n

  namespace daw.pr.minesweeper {
    namespace struct {
      class daw.pr.minesweeper.struct.Cell {
          - minesAround : int
          - offset : int
          - position : int[]
          + Cell()
          + Cell()
          + getColumn()
          + getMinesAround()
          + getOffset()
          + getRow()
          + getStateCanvas()
          + getStateSelf()
          + setMinesAround()
          + setOffset()
          + setPosition()
          + setStateCanvas()
          + setStateSelf()
          + toString()
      }
    }
  }
  

  namespace daw.pr.minesweeper {
    namespace struct {
      enum Difficulty {
        EASY
        HARD
        MEDIUM
        columns
        mines
        rows
      }
    }
  }
  

  namespace daw.pr.minesweeper {
    namespace struct {
      class daw.pr.minesweeper.struct.Game {
          {static} - LOGGER : Logger
          - cells : Cell[][]
          - gameOver : boolean
          - initTime : long
          - moves : int
          - playerName : String
          - points : int
          - scoreValue : int
          + Game()
          + calculateNumbers()
          + getAdjacentCells()
          + getAdjacentMines()
          + getCell()
          + getColumns()
          + getHallFame()
          + getRows()
          + getScoreValue()
          + isGameOver()
          + isWin()
          + leftClick()
          + rightClick()
          + saveWinner()
          + setGameOver()
          + setPlayerName()
          + toString()
          + uncoverAllCells()
          + uncoverCell()
          + uncoverClickedCell()
          + uncoverClickedCell()
          - calculateScoreValue()
          - fillHidden()
          - fillMines()
          - firstMoveCannotBeLoose()
          - generateCanvas()
          - isValidCell()
          - minesFound()
          - printGame()
          - setScoreValue()
      }
    }
  }
  

  namespace daw.pr.minesweeper {
    namespace struct {
      enum StateCanvas {
        FLAGGED
        HIDDEN
        MARKED
        QUESTIONED
        REVEALED
      }
    }
  }
  

  namespace daw.pr.minesweeper {
    namespace struct {
      enum StateSelf {
        CLEAR
        MINE
      }
    }
  }
  

  namespace daw.pr.minesweeper {
    namespace struct {
      interface daw.pr.minesweeper.struct.debug {
          {abstract} + toString()
      }
    }
  }
  

  namespace daw.pr.minesweeper {
    namespace struct {
      interface daw.pr.minesweeper.struct.gameplay {
          {abstract} + leftClick()
          {abstract} + rightClick()
      }
    }
  }
  

  daw.pr.minesweeper.struct.Cell .up.|> daw.pr.minesweeper.struct.debug
  daw.pr.minesweeper.struct.Cell o-- daw.pr.minesweeper.struct.StateCanvas : stateCanvas
  daw.pr.minesweeper.struct.Cell o-- daw.pr.minesweeper.struct.StateSelf : stateSelf
  daw.pr.minesweeper.struct.Game .up.|> daw.pr.minesweeper.struct.debug
  daw.pr.minesweeper.struct.Game .up.|> daw.pr.minesweeper.struct.gameplay
  daw.pr.minesweeper.struct.Game o-- daw.pr.minesweeper.struct.Difficulty : difficulty
  daw.pr.minesweeper.struct.Game o-- daw.pr.minesweeper.SQL.SQLDriver : sql


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
