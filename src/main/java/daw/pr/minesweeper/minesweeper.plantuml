@startuml

title __MINESWEEPER's Class Diagram__\n

  namespace daw.pr.minesweeper {
    class daw.pr.minesweeper.App {
        {static} - LOGGER : Logger
        {static} + main()
        {static} - logSystemInfo()
    }
  }
  

  namespace daw.pr.minesweeper {
    class daw.pr.minesweeper.Cell {
        - minesAround : int
        - offset : int
        - position : int[]
        + Cell()
        + Cell()
        + getColumn()
        + getMinesAround()
        + getOffset()
        + getRow()
        + getStateCanvas()
        + getStateSelf()
        + setMinesAround()
        + setOffset()
        + setPosition()
        + setStateCanvas()
        + setStateSelf()
        + toString()
    }
  }
  

  namespace daw.pr.minesweeper {
    enum Difficulty {
      EASY
      HARD
      MEDIUM
      columns
      mines
      rows
    }
  }
  

  namespace daw.pr.minesweeper {
    class daw.pr.minesweeper.Game {
        {static} - LOGGER : Logger
        - cells : Cell[][]
        - gameOver : boolean
        - initTime : long
        - moves : int
        - playerName : String
        - points : int
        - scoreValue : int
        + Game()
        + calculateNumbers()
        + getAdjacentCells()
        + getAdjacentMines()
        + getCell()
        + getColumns()
        + getHallFame()
        + getRows()
        + getScoreValue()
        + isGameOver()
        + isWin()
        + leftClick()
        + rightClick()
        + saveWinner()
        + setGameOver()
        + setPlayerName()
        + toString()
        + uncoverAllCells()
        + uncoverCell()
        + uncoverClickedCell()
        + uncoverClickedCell()
        - calculateScoreValue()
        - fillHidden()
        - fillMines()
        - firstMoveCannotBeLoose()
        - generateCanvas()
        - isValidCell()
        - minesFound()
        - printGame()
        - setScoreValue()
    }
  }
  

  namespace daw.pr.minesweeper {
    class daw.pr.minesweeper.SQLDriver {
        {static} - DATABASE_URL : String
        + SQLDriver()
        + ejecutarActualizacion()
        + ejecutarQuery()
    }
  }
  

  namespace daw.pr.minesweeper {
    enum StateCanvas {
      FLAGGED
      HIDDEN
      MARKED
      QUESTIONED
      REVEALED
    }
  }
  

  namespace daw.pr.minesweeper {
    enum StateSelf {
      CLEAR
      MINE
    }
  }
  

  namespace daw.pr.minesweeper {
    class daw.pr.minesweeper.WebApp {
        {static} - LOGGER : Logger
        + debug()
        + error()
        + gameOver()
        + getScoreValue()
        + getTableHtml()
        + index()
        + revealCell()
        + startGame()
    }
  }
  

  namespace daw.pr.minesweeper {
    interface daw.pr.minesweeper.debug {
        {abstract} + toString()
    }
  }
  

  namespace daw.pr.minesweeper {
    interface daw.pr.minesweeper.gameplay {
        {abstract} + leftClick()
        {abstract} + rightClick()
    }
  }
  

  daw.pr.minesweeper.Cell .up.|> daw.pr.minesweeper.debug
  daw.pr.minesweeper.Cell o-- daw.pr.minesweeper.StateCanvas : stateCanvas
  daw.pr.minesweeper.Cell o-- daw.pr.minesweeper.StateSelf : stateSelf
  daw.pr.minesweeper.Game .up.|> daw.pr.minesweeper.debug
  daw.pr.minesweeper.Game .up.|> daw.pr.minesweeper.gameplay
  daw.pr.minesweeper.Game o-- daw.pr.minesweeper.Difficulty : difficulty
  daw.pr.minesweeper.Game o-- daw.pr.minesweeper.SQLDriver : sql
  daw.pr.minesweeper.WebApp o-- daw.pr.minesweeper.Game : game


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
